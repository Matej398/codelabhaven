<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CodeLabHaven Admin</title>
    <link href="https://fonts.googleapis.com/css2?family=Arial&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/admin-styles.css">
</head>
<body>
    <div class="container">
        {{#if loggedIn}}
            <h1>Admin Dashboard</h1>
            <form id="addProjectForm" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="title">Project Title <span class="required">*</span>:</label>
                    <input type="text" id="title" name="title" required aria-required="true">
                </div>
                <div class="form-group">
                    <label for="description">Description:</label>
                    <textarea id="description" name="description" maxlength="500"></textarea>
                </div>
                <div class="form-group">
                    <label for="link">Link (optional):</label>
                    <input type="url" id="link" name="link" placeholder="https://example.com">
                </div>
                <div class="form-group">
                    <label for="screenshot">Screenshot (optional):</label>
                    <input type="file" id="screenshot" name="screenshot" accept="image/*">
                </div>
                <div class="form-group">
                    <label for="index">Position (optional):</label>
                    <input type="number" id="index" name="index" min="0">
                </div>
                <button type="submit" id="submitBtn">Add Project</button>
                <div id="loading" class="loading" style="display: none;">Loading...</div>
            </form>
            <table id="projectsList">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Title</th>
                        <th>Description</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
            <button id="logoutBtn">Logout</button>
        {{else}}
            <h1>Admin Login</h1>
            {{#if error}}
                <p class="error">{{error}}</p>
            {{/if}}
            <form method="POST" action="/admin">
                <div class="form-group">
                    <label for="username">Username <span class="required">*</span>:</label>
                    <input type="text" id="username" name="username" required aria-required="true">
                </div>
                <div class="form-group">
                    <label for="password">Password <span class="required">*</span>:</label>
                    <input type="password" id="password" name="password" required aria-required="true">
                </div>
                <button type="submit">Login</button>
                <div id="loginLoading" class="loading" style="display: none;">Logging in...</div>
            </form>
        {{/if}}
    </div>
    <script>
        // Only run dashboard logic if logged in
        {{#if loggedIn}}
            let isLoading = false;

            // Fetch and display projects
            async function fetchProjects() {
                if (isLoading) return;
                isLoading = true;
                document.getElementById('loading').style.display = 'block';
                try {
                    const response = await fetch('/admin/projects-data');
                    const projects = await response.json();
                    const tbody = document.querySelector('#projectsList tbody');
                    tbody.innerHTML = projects.map((p, i) => `
                        <tr>
                            <td>${i + 1}</td>
                            <td>${p.title}</td>
                            <td>${p.description || 'No description'}</td>
                            <td><button onclick="deleteProject(${i})">Delete</button></td>
                        </tr>
                    `).join('');
                } catch (err) {
                    console.error('Error fetching projects:', err);
                    alert('Failed to load projects');
                } finally {
                    isLoading = false;
                    document.getElementById('loading').style.display = 'none';
                }
            }

            // Delete project
            async function deleteProject(index) {
                if (isLoading) return;
                isLoading = true;
                document.getElementById('loading').style.display = 'block';
                try {
                    await fetch('/admin/delete-project', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ index })
                    });
                    fetchProjects();
                } catch (err) {
                    console.error('Error deleting project:', err);
                    alert('Failed to delete project');
                } finally {
                    isLoading = false;
                    document.getElementById('loading').style.display = 'none';
                }
            }

            // Add project
            document.getElementById('addProjectForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                if (isLoading) return;
                isLoading = true;
                document.getElementById('loading').style.display = 'block';
                try {
                    const formData = new FormData(e.target);
                    await fetch('/admin/add-project', {
                        method: 'POST',
                        body: formData
                    });
                    e.target.reset();
                    fetchProjects();
                } catch (err) {
                    console.error('Error adding project:', err);
                    alert('Failed to add project');
                } finally {
                    isLoading = false;
                    document.getElementById('loading').style.display = 'none';
                }
            });

            // Logout
            document.getElementById('logoutBtn').addEventListener('click', () => {
                if (isLoading) return;
                isLoading = true;
                document.getElementById('loading').style.display = 'block';
                fetch('/logout', { method: 'POST' }).then(() => {
                    window.location.href = '/admin';
                }).catch(err => {
                    console.error('Error logging out:', err);
                    alert('Failed to logout');
                }).finally(() => {
                    isLoading = false;
                    document.getElementById('loading').style.display = 'none';
                });
            });

            // Load projects on page load
            fetchProjects();
        {{else}}
            let isLoading = false;

            // Login form submission (handled by server, but show loading)
            document.querySelector('form[method="POST"]').addEventListener('submit', (e) => {
                if (isLoading) return;
                isLoading = true;
                document.getElementById('loginLoading').style.display = 'block';
                // Server handles the restâ€”no need for client-side fetch here
            });
        {{/if}}
    </script>
</body>
</html>